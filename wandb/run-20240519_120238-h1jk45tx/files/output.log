CUDA is available: True
Using 5 GPUs for model parallelization.
Traceback (most recent call last):
  File "/home/usuaris/imatge/joan.manel.cardenas/age_predictions/input_data.py", line 94, in <module>
    for inputs, age_dist, age_real, subject_ids in train_loader:
  File "/home/usuaris/imatge/joan.manel.cardenas/.local/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 631, in __next__
    data = self._next_data()
  File "/home/usuaris/imatge/joan.manel.cardenas/.local/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 1346, in _next_data
    return self._process_data(data)
  File "/home/usuaris/imatge/joan.manel.cardenas/.local/lib/python3.10/site-packages/torch/utils/data/dataloader.py", line 1372, in _process_data
    data.reraise()
  File "/home/usuaris/imatge/joan.manel.cardenas/.local/lib/python3.10/site-packages/torch/_utils.py", line 722, in reraise
    raise exception
UnboundLocalError: Caught UnboundLocalError in DataLoader worker process 0.
Original Traceback (most recent call last):
  File "/home/usuaris/imatge/joan.manel.cardenas/.local/lib/python3.10/site-packages/torch/utils/data/_utils/worker.py", line 308, in _worker_loop
    data = fetcher.fetch(index)
  File "/home/usuaris/imatge/joan.manel.cardenas/.local/lib/python3.10/site-packages/torch/utils/data/_utils/fetch.py", line 51, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/usuaris/imatge/joan.manel.cardenas/.local/lib/python3.10/site-packages/torch/utils/data/_utils/fetch.py", line 51, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/usuaris/imatge/joan.manel.cardenas/age_predictions/model/mri_dataset.py", line 36, in __getitem__
    sample = self.transform(sample)
  File "/home/usuaris/imatge/joan.manel.cardenas/.local/lib/python3.10/site-packages/torchvision/transforms/transforms.py", line 95, in __call__
    img = t(img)
  File "/home/usuaris/imatge/joan.manel.cardenas/age_predictions/m_utils/data_transform.py", line 89, in __call__
    mri_data = torch.from_numpy(mri_data).float()
UnboundLocalError: local variable 'mri_data' referenced before assignment